# This file is licensed under the MIT License.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

"""
SConcript for building different text modules.
"""

# python
import os
import platform

# scons
from SCons.Environment import Environment
from SCons.Script import SConscript
from SCons.Script.SConscript import Return

# project
from BuildUtils import ImportVar

MAIN_ENV = ImportVar('MAIN_ENV')
CXXTEST_DIR = MAIN_ENV['PROJECT_DIR'] + '/Dependencies/cxxtest'

TEST_ENV = Environment(
    DEBUG_BUILD=MAIN_ENV['DEBUG_BUILD'],
    CXXTEST=CXXTEST_DIR + '/bin/cxxtestgen',
    toolpath=[CXXTEST_DIR + '/build_tools/SCons'],
    tools=['default', 'cxxtest']
)

debugFlag = ""
if TEST_ENV['DEBUG_BUILD']:
    debugFlag = "-g"

TEST_ENV.Append(CCFLAGS=[
    "-std=c++11",
    debugFlag,
])
TEST_ENV.Append(CPPPATH=[
    MAIN_ENV['PROJECT_DIR'] + "/build/include",
    MAIN_ENV['PROJECT_DIR'] + "/Testing",
    MAIN_ENV['PROJECT_DIR'] + "/Dependencies/glm",
    MAIN_ENV['PROJECT_DIR'] + "/Dependencies/cxxtest/cxxtest",
])
TEST_ENV.Append(CPPDEFINES=[
    "GLM_FORCE_RADIANS",
])
TEST_ENV.Append(LIBPATH=[
    MAIN_ENV['PROJECT_DIR'] + "/build/lib",
])

if "windows" in platform.system().lower():
    TEST_ENV.Append(LIBS=[
        "OpenDoorGL",
        'OpenGL32',
        'user32',
        'glew32'
    ])
else:
    TEST_ENV.Append(LIBS=[
        "OpenDoorGL",
        "GLEW",
    ])

tests = []
for root, dirs, files in os.walk("./"):
    for file in files:
        if file.endswith("SConscript"):
            if root == "./":
                continue
            tests.append(
                SConscript(
                    os.path.join(root, file),
                    duplicate=0,
                    exports='TEST_ENV'
                )
            )

Return('tests')
