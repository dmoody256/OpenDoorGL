#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

"""
SConscript for building windowing frameworks.
"""

# python
import subprocess
import platform
import os
import re

# scons
import SCons.Action
from SCons.Environment import Environment
from SCons.Script import SConscript
from SCons.Script.Main import AddOption
from SCons.Script.Main import GetOption
from SCons.Script.SConscript import Return

# project
from BuildUtils import ImportVar
MAIN_ENV = ImportVar('MAIN_ENV')

libType = "ReleaseBuild"
debugFlag = ""
if(MAIN_ENV['DEBUG_BUILD']):
    libType = 'DebugBuild'
    debugFlag = "-g"
    

AddOption(
    '--glfw3',
    dest='glfw3',
    action='store_true',
    metavar='DIR',
    default=False,
    help='Build App using GLFW3'
)

env = Environment() 

env.Append(CPPPATH=[
    MAIN_ENV.baseProjectDir + "/AppFrameworks",
    MAIN_ENV.baseProjectDir + "/Core/Source",
    MAIN_ENV.baseProjectDir + "/build/include",
    MAIN_ENV.baseProjectDir + "/Dependencies/glm",
])

env.Append(CCFLAGS=[
    debugFlag,
])

env.Append(CXXFLAGS= [
    "-std=c++11",
])

env.Append(LINKFLAGS= [
    debugFlag,
])

env.Append(LIBPATH=[
    "/usr/lib/gnome-settings-daemon-3.0/",
    MAIN_ENV.baseProjectDir + "/Core/build",
    MAIN_ENV.baseProjectDir + "/build/lib/",
])

env.Append(LIBS=[
    "OpenDoorGL",
    "GLEW",
    "glfw",
    "GL",
    "X11",
    "Xi",
    "Xrandr",
    "Xxf86vm",
    "Xinerama",
    "Xcursor", 
    "rt",
    "m",
    "pthread",
    "dl",
])


if(GetOption('glfw3') == True):
    env.Append(GLFW3 = True)
    env.Append(CPPPATH = [
        "GLFW",
    ])
sourceFiles =  [ "GLFW/odgl_GLFW3.cpp" ]

prog = env.SharedLibrary("OpenDoorGL-GLFW3", sourceFiles)

targets = [
    prog,
    MAIN_ENV.baseProjectDir + "/AppFrameworks/odgl_WindowInterface.hpp",
    MAIN_ENV.baseProjectDir + "/AppFrameworks/GLFW/odgl_GLFW3.hpp",
]

Return('targets')
