#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

"""
SConscript for building windowing frameworks.
"""

import platform

# scons
from SCons.Environment import Environment
from SCons.Script.Main import AddOption
from SCons.Script.Main import GetOption
from SCons.Script.SConscript import Return

# project
from BuildUtils import ImportVar
MAIN_ENV = ImportVar('MAIN_ENV')

libType = "ReleaseBuild"
debugFlag = ""
if MAIN_ENV['DEBUG_BUILD']:
    libType = 'DebugBuild'
    debugFlag = "-g"


AddOption(
    '--glfw3',
    dest='glfw3',
    action='store_true',
    metavar='DIR',
    default=False,
    help='Build App using GLFW3'
)

env = Environment()

env.Append(CPPPATH=[
    MAIN_ENV['PROJECT_DIR'] + "/AppFrameworks",
    MAIN_ENV['PROJECT_DIR'] + "/Core/Source",
    MAIN_ENV['PROJECT_DIR'] + "/build/include",
    MAIN_ENV['PROJECT_DIR'] + "/Dependencies/glm",
])

env.Append(CPPDEFINES=[
    "ODGL_LIBRARAY_BUILD"
])


env.Append(CCFLAGS=[
    debugFlag,
])

env.Append(CXXFLAGS=[
    "-std=c++11",
])

env.Append(LINKFLAGS=[
    debugFlag,
])

env.Append(LIBPATH=[
    "/usr/lib/gnome-settings-daemon-3.0/",
    MAIN_ENV['PROJECT_DIR'] + "/Core/build",
    MAIN_ENV['PROJECT_DIR'] + "/build/lib/",
])

if "window" in platform.system().lower():

    env.Append(
        CPPDEFINES=['WIN32'],
        LIBS=[
            "OpenDoorGL",
            "glew32",
            "glfw3",
            "OpenGL32",
        ])
else:
    env.Append(LIBS=[
        "OpenDoorGL",
        "GLEW",
        "glfw3",
        "GL",
        "X11",
        "Xi",
        "Xrandr",
        "Xxf86vm",
        "Xinerama",
        "Xcursor",
        "rt",
        "m",
        "pthread",
        "dl",
    ])


if GetOption('glfw3'):
    env.Append(GLFW3=True)
    env.Append(CPPPATH=[
        "GLFW",
    ])
sourceFiles = ["GLFW/odgl_GLFW3.cpp"]

prog = env.SharedLibrary("OpenDoorGL-GLFW3", sourceFiles)

targets = [
    prog,
    MAIN_ENV['PROJECT_DIR'] + "/AppFrameworks/odgl_WindowInterface.hpp",
    MAIN_ENV['PROJECT_DIR'] + "/AppFrameworks/GLFW/odgl_GLFW3.hpp",
]

Return('targets')
